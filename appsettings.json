{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  "ConnectionStrings": {
    "WalksAuthConnectionString": "server=localhost;database=WalksAuthDb;Trusted_Connection=true;Encrypt=false",
    "WalksConnectionString": "server=localhost;database=WalksDb;Trusted_Connection=true;Encrypt=false",
    //using \\ to actually escepe the '\' speicial ch
    //So sqlcmd -L is not a reliable way to check local SQL Server availability.
    //update-database works fine because it knows exactly where to connect.
    //sqlcmd -L relies on network discovery (UDP broadcast), which can be blocked or disabled.
    /* 
  That’s the fallback: trying different ways to reach the SQL Server.
Your app (like EF Core or Dapper), however, usually only tries one method — based on your connection string.
*/
  },
  "JWT": {
    "key": "ad6c03d23e1075d33288ec64b634d5648049fa9a7f089d43b45c757e9d9f8482",
    "Issuer": "https://localhost:7028/",
    "Audience": "https://localhost:7028/"
  }
}
